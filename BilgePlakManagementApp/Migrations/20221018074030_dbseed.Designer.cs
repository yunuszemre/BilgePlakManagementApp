// <auto-generated />
using System;
using BilgePlakManagementApp.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BilgePlakManagementApp.Migrations
{
    [DbContext(typeof(PlakDbContext))]
    [Migration("20221018074030_dbseed")]
    partial class dbseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BilgePlakManagementApp.DAL.Entities.Album", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("AlbumName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ArtistId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CriticalLevel")
                        .HasColumnType("int");

                    b.Property<bool?>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<float?>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(5077));

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("char(100)");

                    b.Property<DateTime?>("RecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(5239));

                    b.Property<DateTime?>("ReleaseDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(5336));

                    b.Property<int?>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AlbumName = "Darısı Başınıza",
                            ArtistId = 1,
                            CategoryId = 1,
                            CriticalLevel = 10,
                            Discontinued = false,
                            Discount = 10f,
                            ModifiedDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(7099),
                            Price = 100m,
                            RecordDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(7101),
                            UnitsInStock = 10
                        },
                        new
                        {
                            ProductId = 2,
                            AlbumName = "Nerede Kalmıştık",
                            ArtistId = 2,
                            CategoryId = 1,
                            CriticalLevel = 10,
                            Discontinued = false,
                            Discount = 10f,
                            ModifiedDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(7103),
                            Price = 100m,
                            RecordDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(7104),
                            UnitsInStock = 10
                        });
                });

            modelBuilder.Entity("BilgePlakManagementApp.DAL.Entities.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"), 1L, 1);

                    b.Property<string>("ArtistName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(4465));

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(4187));

                    b.Property<DateTime?>("RecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(4377));

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            ArtistName = "Barış Manço",
                            ModifiedDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(4521),
                            RecordDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(4520)
                        },
                        new
                        {
                            ArtistId = 2,
                            ArtistName = "Cem Karaca",
                            ModifiedDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(4523),
                            RecordDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(4522)
                        });
                });

            modelBuilder.Entity("BilgePlakManagementApp.DAL.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Plak",
                            ModifiedDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(3931),
                            RecordDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(3914)
                        });
                });

            modelBuilder.Entity("BilgePlakManagementApp.DAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ModifiedDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(7330),
                            Password = "Asdf_1234",
                            RecordDate = new DateTime(2022, 10, 18, 10, 40, 29, 853, DateTimeKind.Local).AddTicks(7330),
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("BilgePlakManagementApp.DAL.Entities.Album", b =>
                {
                    b.HasOne("BilgePlakManagementApp.DAL.Entities.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BilgePlakManagementApp.DAL.Entities.Category", "Category")
                        .WithMany("Albums")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BilgePlakManagementApp.DAL.Entities.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("BilgePlakManagementApp.DAL.Entities.Category", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
